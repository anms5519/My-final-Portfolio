/* --- Resume Vault Section --- */
.resume-vault-section {
    position: relative;
    min-height: 100vh; /* Full viewport height for immersive feel */
    padding: var(--section-padding, 10vh 0);
    background: var(--bg-color, #030310); /* Dark base */
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; /* Crucial for absolute positioned bg elements */
    font-family: var(--font-family-secondary, 'Exo 2', sans-serif); /* Futuristic font */
}

.vault-background-elements {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    z-index: 0;
}

.grid-overlay {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background-image:
        linear-gradient(to right, rgba(var(--primary-color-rgb, 0,255,255), 0.05) .1vh, transparent .1vh),
        linear-gradient(to bottom, rgba(var(--primary-color-rgb, 0,255,255), 0.05) .1vh, transparent .1vh);
    background-size: 5vh 5vh;
    opacity: 0.5;
    animation: pulseGrid 10s infinite linear;
}

@keyframes pulseGrid {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.6; }
}

.particle-field {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
}

.particle-field .particle {
    position: absolute;
    background-color: var(--primary-color, #00FFFF);
    border-radius: 50%;
    opacity: 0;
    animation: floatParticle-vault 10s infinite ease-in-out;
}

/* Simple particle distribution - for more, use JS or more pseudo-elements */
.particle-field .particle:nth-child(1) { width: .2vh; height: .2vh; top: 10%; left: 20%; animation-delay: 0s; }
.particle-field .particle:nth-child(2) { width: .3vh; height: .3vh; top: 30%; left: 80%; animation-delay: 1s; background-color: var(--secondary-color, #FF00FF); }
.particle-field .particle:nth-child(3) { width: .1vh; height: .1vh; top: 50%; left: 50%; animation-delay: 2s; }
.particle-field .particle:nth-child(4) { width: .2vh; height: .2vh; top: 70%; left: 10%; animation-delay: 3s; }
.particle-field .particle:nth-child(5) { width: .3vh; height: .3vh; top: 90%; left: 90%; animation-delay: 4s; background-color: var(--secondary-color, #FF00FF); }
.particle-field .particle:nth-child(6) { width: .2vh; height: .2vh; top: 15%; left: 60%; animation-delay: 0.5s; }
.particle-field .particle:nth-child(7) { width: .1vh; height: .1vh; top: 35%; left: 30%; animation-delay: 1.5s; background-color: var(--accent-color, #FAFAFA); }
.particle-field .particle:nth-child(8) { width: .3vh; height: .3vh; top: 55%; left: 75%; animation-delay: 2.5s; }
.particle-field .particle:nth-child(9) { width: .2vh; height: .2vh; top: 75%; left: 40%; animation-delay: 3.5s; background-color: var(--secondary-color, #FF00FF); }
.particle-field .particle:nth-child(10) { width: .1vh; height: .1vh; top: 85%; left: 15%; animation-delay: 4.5s; }
.particle-field .particle:nth-child(11) { width: .3vh; height: .3vh; top: 5%; left: 5%; animation-delay: 0.2s; background-color: var(--accent-color, #FAFAFA); }
.particle-field .particle:nth-child(12) { width: .2vh; height: .2vh; top: 25%; left: 95%; animation-delay: 1.2s; }
.particle-field .particle:nth-child(13) { width: .1vh; height: .1vh; top: 45%; left: 45%; animation-delay: 2.2s; background-color: var(--secondary-color, #FF00FF); }
.particle-field .particle:nth-child(14) { width: .3vh; height: .3vh; top: 65%; left: 65%; animation-delay: 3.2s; }
.particle-field .particle:nth-child(15) { width: .2vh; height: .2vh; top: 95%; left: 25%; animation-delay: 4.2s; background-color: var(--accent-color, #FAFAFA); }


@keyframes floatParticle-vault {
    0% { transform: translate(0, 0) scale(0.5); opacity: 0; }
    50% { opacity: 0.6; transform: translate(calc(var(--i, 1) * 1vh), calc(var(--j, 1) * -3vh)) scale(1); }
    100% { transform: translate(calc(var(--i, 1) * 2vh), calc(var(--j, 1) * -6vh)) scale(0.5); opacity: 0; }
}
/* Assign random-ish directions for particles (can be done better with JS) */
.particle-field .particle:nth-child(odd) { --j: -1; }
.particle-field .particle:nth-child(3n) { --i: -1; }


.vault-container {
    position: relative;
    z-index: 1;
    width: 100%;
    max-width: 70vh; /* Max width of the interface */
    padding: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

.vault-interface {
    position: relative;
    width: 100%;
    perspective: 100vh; /* For 3D effects on children if needed */
}

/* --- Lock Mechanism --- */
.vault-lock-mechanism {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    cursor: pointer;
    padding: 2rem;
    border-radius: var(--border-radius-round, 1.5vh);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
    z-index: 10; /* Above content chamber initially */
}

.lock-core-assembly {
    position: relative;
    width: 18vh; /* Size of the lock */
    height: 18vh;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1.5rem;
}

.lock-ring {
    position: absolute;
    border-style: solid;
    border-color: transparent;
    border-radius: 50%;
    transition: all 0.8s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Elastic transition */
}

.lock-ring.ring-outer {
    width: 100%; height: 100%;
    border-width: .3vh;
    border-top-color: rgba(var(--primary-color-rgb,0,255,255), 0.7);
    border-left-color: rgba(var(--primary-color-rgb,0,255,255), 0.7);
    animation: spin 10s linear infinite;
}
.lock-ring.ring-middle {
    width: 75%; height: 75%;
    border-width: .2vh;
    border-bottom-color: rgba(var(--secondary-color-rgb,255,0,255), 0.6);
    border-right-color: rgba(var(--secondary-color-rgb,255,0,255), 0.6);
    animation: spin-reverse 8s linear infinite;
}
.lock-ring.ring-inner {
    width: 50%; height: 50%;
    border-width: .4vh; /* Thicker inner ring */
    border-top-color: rgba(var(--accent-color-rgb,250,250,250), 0.5);
    border-bottom-color: rgba(var(--accent-color-rgb,250,250,250), 0.5);
    animation: spin 12s linear infinite 0.5s;
}

.core-crystal {
    width: 40%; height: 40%;
    background: radial-gradient(ellipse at center, rgba(var(--primary-color-rgb,0,255,255),0.3) 0%, rgba(var(--primary-color-rgb,0,255,255),0.05) 70%);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--primary-color, #00FFFF);
    font-size: 2.5rem;
    box-shadow: 0 0 1.5vh rgba(var(--primary-color-rgb,0,255,255),0.3), inset 0 0 1vh rgba(var(--primary-color-rgb,0,255,255),0.2);
    transition: transform 0.3s ease, box-shadow 0.3s ease, color 0.3s ease;
}
.core-crystal:hover {
    transform: scale(1.1);
    box-shadow: 0 0 2.5vh rgba(var(--primary-color-rgb,0,255,255),0.5), inset 0 0 1.5vh rgba(var(--primary-color-rgb,0,255,255),0.3);
    color: var(--accent-color, #FAFAFA);
}
.core-crystal.pulsing {
    animation: pulseCrystal 1.5s infinite ease-in-out;
}
.core-crystal.accessed {
    color: var(--secondary-color, #FF00FF);
    box-shadow: 0 0 3vh rgba(var(--secondary-color-rgb,255,0,255),0.6), inset 0 0 2vh rgba(var(--secondary-color-rgb,255,0,255),0.4);
}


@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
@keyframes spin-reverse { 0% { transform: rotate(0deg); } 100% { transform: rotate(-360deg); } }
@keyframes pulseCrystal {
    0%, 100% { transform: scale(1); box-shadow: 0 0 1.5vh rgba(var(--primary-color-rgb,0,255,255),0.3), inset 0 0 1vh rgba(var(--primary-color-rgb,0,255,255),0.2); }
    50% { transform: scale(1.05); box-shadow: 0 0 2.5vh rgba(var(--primary-color-rgb,0,255,255),0.5), inset 0 0 1.5vh rgba(var(--primary-color-rgb,0,255,255),0.3); }
}

.lock-status-display {
    text-align: center;
    color: var(--text-color-light, #A0A0C0);
}
.lock-status-display .status-text {
    font-size: 1.1rem;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    margin-bottom: 0.8rem;
    min-height: 1.5em; /* Prevent layout shift */
    color: var(--primary-color);
    transition: color 0.3s ease;
}
.vault-lock-mechanism.activating .status-text {
    color: var(--secondary-color);
}

.status-progress-bar {
    width: 20vh;
    height: .5vh;
    background: rgba(var(--primary-color-rgb,0,255,255), 0.1);
    border-radius: .3vh;
    overflow: hidden;
    margin: 0 auto;
}
.progress-fill {
    width: 0%;
    height: 100%;
    background: var(--primary-color, #00FFFF);
    border-radius: .3vh;
    transition: width 0.5s ease-out;
    box-shadow: 0 0 .8vh var(--primary-color);
}

.scanline-effect {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background: linear-gradient(to bottom, rgba(var(--primary-color-rgb,0,255,255),0.08) 50%, transparent 50%);
    background-size: 100% .8vh; /* Height of scanlines */
    opacity: 0;
    animation: scan 3s linear infinite paused; /* Paused initially */
    pointer-events: none;
}
.vault-lock-mechanism.activating .scanline-effect {
    animation-play-state: running;
    opacity: 1;
}

@keyframes scan {
    0% { background-position: 0 0; }
    100% { background-position: 0 -.8vh; } /* Move by one scanline height */
}

/* --- Unlocking Animation --- */
.vault-lock-mechanism.unlocked {
    opacity: 0;
    transform: scale(0.8) translateY(-5vh);
    pointer-events: none; /* Disable clicks after unlock */
}
.vault-lock-mechanism.unlocked .lock-ring.ring-outer { transform: rotate(180deg) scale(1.5); opacity: 0; }
.vault-lock-mechanism.unlocked .lock-ring.ring-middle { transform: rotate(-180deg) scale(1.8); opacity: 0; }
.vault-lock-mechanism.unlocked .lock-ring.ring-inner { transform: scale(0.5); opacity: 0; }


/* --- Content Chamber --- */
.vault-content-chamber {
    position: absolute; /* Positioned under the lock initially */
    top: 50%; left: 50%;
    transform: translate(-50%, -50%) scale(0.9);
    width: 100%;
    max-width: 60vh;
    padding: 2.5rem;
    background: var(--card-bg, rgba(10, 10, 31, 0.85));
    border: .1vh solid var(--card-border, rgba(0, 255, 255, 0.2));
    border-radius: var(--border-radius-soft, 0.8vh);
    box-shadow: var(--card-shadow, 0 0.8vh 3vh rgba(0,0,0,0.4));
    backdrop-filter: var(--glass-effect, blur(.8vh));
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.6s ease-out 0.3s, transform 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55) 0.3s, visibility 0s 0.9s;
    z-index: 5;
    text-align: center;
}

.vault-content-chamber.revealed {
    opacity: 1;
    visibility: visible;
    transform: translate(-50%, -50%) scale(1);
    transition: opacity 0.6s ease-out 0.3s, transform 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55) 0.3s, visibility 0s 0s;
}

.chamber-header { margin-bottom: 2rem; }
.chamber-title {
    font-size: clamp(1.8rem, 4vw, 2.5rem);
    color: var(--text-color-headings, #FFFFFF);
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}
.chamber-title .highlight {
    color: var(--primary-color, #00FFFF);
    text-shadow: 0 0 1vh rgba(var(--primary-color-rgb,0,255,255),0.5);
}
.chamber-subtitle {
    font-size: clamp(0.9rem, 2vw, 1.1rem);
    color: var(--text-color-light, #A0A0C0);
    line-height: 1.6;
    font-family: var(--font-family-primary, 'Poppins');
}

.chamber-actions {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: center;
}



.vault-action-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 0.8rem 1.8rem;
    font-family: var(--font-family-secondary, 'Exo 2');
    font-size: 0.9rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-radius: var(--border-radius-sharp, 0.4vh);
    cursor: pointer;
    text-decoration: none;
    transition: all 0.3s var(--transition-ease);
    position: relative;
    overflow: hidden;
    min-width: 22vh; /* Ensure buttons have a decent width */
}
.vault-action-btn i { font-size: 1.1rem; }

.vault-action-btn.btn-primary-vault {
    background: var(--gradient-primary, linear-gradient(135deg, #00FFFF, #FF00FF));
    color: var(--bg-color, #030310); /* Contrast text */
    border: none;
    box-shadow: 0 0 1.5vh rgba(var(--primary-color-rgb,0,255,255),0.3), 0 0 1vh rgba(var(--secondary-color-rgb,255,0,255),0.2);
}
.vault-action-btn.btn-primary-vault:hover {
    transform: translateY(-.3vh) scale(1.03);
    box-shadow: 0 .5vh 2.5vh rgba(var(--primary-color-rgb,0,255,255),0.5), 0 0 1.5vh rgba(var(--secondary-color-rgb,255,0,255),0.3);
}

.vault-action-btn.btn-secondary-vault {
    background: transparent;
    border: .2vh solid var(--primary-color, #00FFFF);
    color: var(--primary-color, #00FFFF);
}
.vault-action-btn.btn-secondary-vault:hover {
    background: var(--primary-color, #00FFFF);
    color: var(--bg-color, #030310);
    box-shadow: 0 0 1.5vh rgba(var(--primary-color-rgb,0,255,255),0.5);
    transform: translateY(-.2vh);
}

.vault-action-btn.btn-tertiary-vault {
    background: transparent;
    border: .2vh solid var(--text-color-darker, #707090);
    color: var(--text-color-darker, #707090);
}
.vault-action-btn.btn-tertiary-vault:hover {
    border-color: var(--accent-color, #FAFAFA);
    color: var(--accent-color, #FAFAFA);
    box-shadow: 0 0 1vh rgba(var(--accent-color-rgb,250,250,250),0.3);
    transform: translateY(-.2vh);
}

.chamber-footer-accent {
    width: 80%;
    height: .2vh;
    background: linear-gradient(to right, transparent, rgba(var(--primary-color-rgb,0,255,255),0.3), transparent);
    margin: 2rem auto 0;
}

/* Ensure AOS is initialized for elements inside the revealed chamber */
.vault-content-chamber.revealed [data-aos] {
    opacity: 0; /* Start hidden for AOS */
}
.vault-content-chamber.revealed [data-aos].aos-animate {
    opacity: 1; /* Become visible when AOS animates */
}